// 问题1 创建一个无原型的对象
var dict = Object.create(null, {
    man: { value: "not woman" }
});

function getValue(word) {
    return dict[word];
}

console.log(getValue("man")); // output: "not woman"

console.log(getValue("constructor")); // output: undefined


实现一个带权重的随机算法，输入 n 个数字以及它们对应的权重，输出其中 m 个。注意：要求时间复杂度为 O(n)，空间复杂度为 O(m)
比如： 值是 [1, 2, 3, 4, 5, 6]，权重是  [10, 5, 3, 10, 7, 8]，n = 6，m = 2
输出：1, 4

public void printM(int[][] nums, int m) { 
    int n = nums.length;
    for (int i = 1; i < n; i++) {
        nums[i][1] += nums[i - 1][1];
    }
    Random rand = new Random();
    for (int i = 0; i < m; i++) {
        int randNum = rand.nextInt(nums[n - 1][1]);
        System.out.println(randNum);
        System.out.println(binarySearch(nums, randNum));
    }
}

private int binarySearch(int[][] nums, int target) {
    int start = 0;
    int end = nums.length;
    while (start + 1 < end) {
        int mid = start + (end - start) / 2;
        if (nums[mid][1] >= target) {
            end = mid;
        } else {
            start = mid;
        }
    }
    if (nums[start][1] >= target) {
        return nums[start][0];
    }
    if (nums[end][1] >= target) {
        return nums[end][0];
    }
    return -1;
}

public static void main(String[] args) {
    Alipay test = new Alipay();
    int[][] nums = {{1, 10}, {2, 5}, {3, 3}, {4, 10}, {5, 7}, {6, 8}};
    test.printM(nums, 2);
}


// 问题3 设计一个 JSON 序列化算法，支持 Date, Buffer 等类型属性
const json = {
    string: 'hello world',
    number: 100,
    date: new Date(),
    // buf: new Buffer('hello world')
};

function encode(jsObject) {
    return JSON.stringify(jsObject);
}

function decode(jsonStr) {
    var jsObject = JSON.parse(jsonStr);
    for (var key in jsObject) {
        var value = jsObject[key];
        // console.log(value);
        // 2018-03-07T10:52:51.471Z
        if (typeof value === "string" && value.match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$/)) {
            jsObject[key] = new Date(value);
            console.log(jsObject[key]);
        }
    }
    return jsObject;
}

const jsonStr = encode(json);
const obj = decode(jsonStr);
console.log(jsonStr);
console.log(obj);
